C51 COMPILER V9.00   PLL                                                                   05/25/2020 14:46:18 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE PLL
OBJECT MODULE PLACED IN .\Objects\pll.obj
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE pll.c BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\pll.lst) OBJECT(.\Objects\
                    -pll.obj)

line level    source

   1          #include "stc8.h"
   2          #include "pll.h"
   3          #include "utily.h"
   4          
   5          //∑¢…‰4300MHz
   6          unsigned int tx_nint_ratio = 430/*430*/;
   7          unsigned int tx_r_ratio = 4/*10*/;         
   8          unsigned long tx_nfrac_ratio = 0;
   9          unsigned long tx_reg_var[6] = {0x1f867f,0xf6800a,0xfc0001,0x1ae,0x0};
  10          //Ω” ’4289.231MHz
  11          unsigned int rx_nint_ratio = 428/*430*/;
  12          unsigned int rx_r_ratio = 4/*10*/;         
  13          unsigned long rx_nfrac_ratio = 967940;
  14          unsigned long rx_reg_var[6] = {0x1f867f,0xf6800a,0xfc0001,0x1ae,0x0};
  15          
  16          sbit ldo = P0^3;
  17          
  18          sbit dout = P2^7;
  19          sbit clk = P0^5;
  20          sbit tx_le = P0^3;
  21          sbit rx_le = P0^0;
  22          
  23          void PLL_Reset()
  24          {
  25   1              clk = 0;
  26   1              dout = 0;
  27   1              rx_le = 1;
  28   1              tx_le = 1;
  29   1      
  30   1              //tx
  31   1              //reference div ratio
  32   1              tx_reg_var[1] &= 0xffc000;
  33   1              tx_reg_var[1] |= tx_r_ratio;
  34   1      
  35   1              //n.int div ratio
  36   1              tx_reg_var[3] &= 0xff0000;
  37   1              tx_reg_var[3] |= tx_nint_ratio;
  38   1      
  39   1              //n.frac div ratio
  40   1              tx_reg_var[4] &= 0xf00000;
  41   1              tx_reg_var[4] |= tx_nfrac_ratio;
  42   1      
  43   1      
  44   1              //rx
  45   1              //reference div ratio
  46   1              rx_reg_var[1] &= 0xffc000;
  47   1              rx_reg_var[1] |= rx_r_ratio;
  48   1      
  49   1              //n.int div ratio
  50   1              rx_reg_var[3] &= 0xff0000;
  51   1              rx_reg_var[3] |= rx_nint_ratio;
  52   1      
  53   1              //n.frac div ratio
  54   1              rx_reg_var[4] &= 0xf00000;
C51 COMPILER V9.00   PLL                                                                   05/25/2020 14:46:18 PAGE 2   

  55   1              rx_reg_var[4] |= rx_nfrac_ratio;
  56   1      }
  57          
  58          void PLL_WriteTxReg(unsigned char addr,unsigned long var)
  59          {
  60   1              unsigned char i;
  61   1              unsigned long content = addr,temp;
  62   1              content = content << 24;
  63   1              content |= var;
  64   1              
  65   1              tx_le = 0;
  66   1              
  67   1              for(i=0;i<27;i++)
  68   1              {
  69   2                      temp = (0x04000000 >> i);
  70   2                      
  71   2                      clk = 0;
  72   2                      
  73   2                      if((content & temp) == temp)
  74   2                              dout = 1;
  75   2                      else dout = 0;
  76   2                      
  77   2                      clk = 1;
  78   2              }       
  79   1              
  80   1              clk = 0;
  81   1              dout = 0;
  82   1              tx_le = 1;
  83   1      }
  84          
  85          void PLL_WriteRxReg(unsigned char addr,unsigned long var)
  86          {
  87   1              unsigned char i;
  88   1              unsigned long content = addr,temp;
  89   1              content = content << 24;
  90   1              content |= var;
  91   1              
  92   1              rx_le = 0;
  93   1              
  94   1              for(i=0;i<27;i++)
  95   1              {
  96   2                      temp = (0x04000000 >> i);
  97   2                      
  98   2                      clk = 0;
  99   2                      
 100   2                      if((content & temp) == temp)
 101   2                              dout = 1;
 102   2                      else dout = 0;
 103   2                      
 104   2                      clk = 1;
 105   2              }       
 106   1              
 107   1              clk = 0;
 108   1              dout = 0;
 109   1              rx_le = 1;
 110   1      }
 111          
 112          void PLL_Tx_Config()
 113          {
 114   1              unsigned char i;
 115   1              for(i=0;i<5;i++)
 116   1              {
C51 COMPILER V9.00   PLL                                                                   05/25/2020 14:46:18 PAGE 3   

 117   2                      PLL_WriteTxReg(i, tx_reg_var[i]);
 118   2      
 119   2                      tx_le = 1;
 120   2                      delay_ms(1);
 121   2                      tx_le = 0;
 122   2                      delay_ms(1);
 123   2                      tx_le = 1;
 124   2              }
 125   1      }
 126          
 127          void PLL_Rx_Config()
 128          {
 129   1              unsigned char i;
 130   1              for(i=0;i<5;i++)
 131   1              {
 132   2                      PLL_WriteRxReg(i, rx_reg_var[i]);
 133   2      
 134   2                      rx_le = 1;
 135   2                      delay_ms(1);
 136   2                      rx_le = 0;
 137   2                      delay_ms(1);
 138   2                      rx_le = 1;
 139   2              }
 140   1      }
 141          
 142          signed char PLL_IsLocked()
 143          {
 144   1              return ldo;
 145   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    615    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     64      30
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
