C51 COMPILER V9.00   I2C                                                                   05/11/2020 01:12:22 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE I2C
OBJECT MODULE PLACED IN .\Objects\i2c.obj
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE i2c.c BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\i2c.lst) OBJECT(.\Objects\
                    -i2c.obj)

line level    source

   1          #include "i2c.h"
   2          #include "stc8.h"
   3          
   4          unsigned char CDCE913inx_data[]=
   5          {
   6                  0x82,0x34,        //2  1011 0100    Ä¬ÈÏ
   7                  0x83,0x01,        //3  0x02             P1div=pdiv
   8                  0x84,0x02,        //4  0000 0010   Ä¬ÈÏ
   9                  0x85,0xa0,        //5  0101  0000   Ä¬ÈÏ10pF      Èç¹ûº¸½Ó10pF£¬ÄÚ²¿µÄµçÈÝÐ´0¼´¿É
  10                  0x86,0x40,        //6  0x40
  11                                                                    //14h--1fhÐ´ÈëÊý¾Ý
  12                  0x93,0x00,      // ÌØ±ð×¢Òâ£¬ÒòÎªÑ¡ÔñÁËfvco1-1  PLL1-1  ´Ó¶øFS1-1±ØÐëÖÃÎ»
  13                  0x94,0x6d,       //14  0110 1101       pLL1  P2div  P3div Y2Y3ST1       Èç¹ûÐ´0xed£¬´ú±íPLL1PASS£¬Ö±½ÓÓÃ25M·ÖÆ
             -µÁË
  14                  0x95,0x02,       //15  00000010     Ä¬ÈÏ
  15                  0x96,0x00,               //16     0x02          P2div=pdiv
  16                  0x97,0x06,           //17     0x02      P3div=pdiv
  17          
  18                  0x98,0xb6,       //18  0x00      PLL×´Ì¬0²»ÓÃ£¬Ð´È±Ê¡Öµ
  19                  0x99,0x26,       //19  0x40
  20                  0x9a,0x83,       //1a  0x02
  21                  0x9b,0x6a,    //1b  0x08         fvco1_0  ÏÖÔÚÊÇÊ²Ã´Çé¿ö
  22          
  23                  0x9c,0xb6,      //1c   value_1c    PLL×´Ì¬1
  24                  0x9d,0x26,      //1d  value_1d
  25                  0x9e,0x83,      //1e  value_1e
  26                  0x9f, 0x6a,     //1f   value_1f
  27          
  28                  0x86,0x41,       //6  0x41      ¿ªÊ¼Ð´PROM
  29          };
  30          
  31          void i2c_init()
  32          {       
  33   1              I2CMSCR &= ~0x80;
  34   1              //I2CMSAUX &= ~0x01; 
  35   1              I2CSLADR  = (0x65 << 1);
  36   1              I2CMSST |= 0x01;
  37   1              I2CCFG |= 0xc0;
  38   1      }
  39          
  40          void i2c_write(unsigned char addr,unsigned char var)
  41          {
  42   1              I2CMSCR = 0x0001;//START
  43   1      
  44   1              I2CTXD = addr;
  45   1              I2CMSCR = 0x1010;//send DATA and recv ACK
  46   1              while((I2CMSST & 0x40) == 0);
  47   1              I2CMSST &= ~0x40;
  48   1      
  49   1      //      I2CMSCR = 0x0101;//recv ACK
  50   1      //      while((I2CMSST & 0x40) == 0);
  51   1      //      I2CMSST &= ~0x40;
  52   1      
  53   1              I2CTXD = var;
C51 COMPILER V9.00   I2C                                                                   05/11/2020 01:12:22 PAGE 2   

  54   1              I2CMSCR = 0x1010;//send DATA and recv ACK
  55   1              while((I2CMSST & 0x40) == 0);
  56   1              I2CMSST &= ~0x40;
  57   1      
  58   1      //      I2CMSCR = 0x0101;//send NACK
  59   1      //      while((I2CMSST & 0x40) == 0);
  60   1      //      I2CMSST &= ~0x40;
  61   1      
  62   1              I2CMSCR = 0x0110;//send STOP
  63   1              while((I2CMSST & 0x40) == 0);
  64   1              I2CMSST &= ~0x40;
  65   1      }
  66          
  67          void i2c_config913()
  68          {
  69   1              int ui32Index;
  70   1      
  71   1              P_SW2 |= 0x80;
  72   1      
  73   1              i2c_init();
  74   1      
  75   1              for(ui32Index = 0; ui32Index < 19; ui32Index++)
  76   1              {
  77   2                      i2c_write(CDCE913inx_data[ui32Index*2],CDCE913inx_data[ui32Index*2+1]);
  78   2              }
  79   1      
  80   1              i2c_write(0x86,0x40);
  81   1      
  82   1              P_SW2 &= ~0x80;
  83   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    155    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     38    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
